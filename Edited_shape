let i = 0;
let t = 0;
class shape {
    constructor(vNnum,nm,sm,fcm,height)
    {

        this.vNnum = vNnum;
        this.nm = nm;
        this.sm = sm;
        this.fcm = fcm;
        this.col = 20;
        this.size = height;

    }

    update(speed,col,size)
    {
        this.fcm = speed;
        this.size = size;
        this.col = col;
    }


    draw(width,height)
    {

        blendMode(MULTIPLY);
        noStroke();
        push();
        translate(width/2,height/2);

        fill(this.col,noise(this.col)*90,100);

        // VNnum = how close to circle / nm = inside movement / sm = movement/ fcm = speed

        // rotate the shape , alpha = number of frames / fcm (an input aviable)
        // some how controlling the speed that the shape is spinning

        rotate(frameCount/this.fcm);
        let dr = TWO_PI/this.vNnum;

        // using beginshape and endshape you can drrow any polygon
        beginShape();
        for(let i = 0; i  < this.vNnum + 3; i++){
            let ind = i%this.vNnum;
            let rad = dr *ind;
            // noise = random number generator in a sequence that can make the movement smoother
            let r = this.size*0.3 + noise(frameCount/this.nm + ind) *
                this.size*0.1 + sin(frameCount/this.sm + ind)*this.size*0.05;
            // drowing a curve
            curveVertex(cos(rad)*r, sin(rad)*r);
        }
        endShape();
        pop();

    }
}


let mic , fft;
function setup() {
    createCanvas(windowWidth, windowHeight);
    mic = new p5.AudioIn();
    mic.start();
    fft = new p5.FFT();
    fft.setInput(mic);

}

function mouseClicked(){
    if (getAudioContext().state !== 'running') {
        getAudioContext().resume();
    }
}

let s1 = new shape(18,50,20,150,300);
let s2 = new shape(15,60,25,120,300);
let s3 = new shape(12,45,15,150,300);

let itV = 1;
let vol = [];
let s = [];
let hue = [];

vol[0] = 120;
s[0] = 300;
hue[0] = 30;

let easing = 0.5;
let speedcir = 120;
let huecir = 30;
let sizecircles = 300;

function draw() {

    let m = mic.getLevel();
    let spectrum = fft.analyze();
    let mid = fft.getEnergy("mid");

    vol[itV] = map(m,0,0.99,120,150);
    hue[itV] = map(mid, 0, 255, 30, 100);
    s[itV] = map(m,0,0.99,400,2000);


    let difv = vol[itV] - vol[itV-1];
    speedcir += difv * easing;

    let difh = hue[itV] - hue[itV-1];
    huecir += difh * easing;

    let difs = s[itV] - s[itV-1];
    sizecircles += difs * easing;

    console.log("VVVVVVVVVVVVVV",difv,"JJJJJJJJJj",speedcir);
    console.log("HHHHHHHHHHHHHHHHHHHH",difh);
    console.log("SSSSSSSSSSSSSSSs",difs,"***********8",sizecircles);


    colorMode(HSB, 100);
    blendMode(BLEND);
    background(100,0,100);


    s1.update(speedcir,huecir,sizecircles);
    s2.update(speedcir,huecir+20,sizecircles);
    s3.update(speedcir,huecir+10,sizecircles);
    itV +=1;




    s1.draw(width,height);
    s2.draw(width,height);
    s3.draw(width,height);


}

